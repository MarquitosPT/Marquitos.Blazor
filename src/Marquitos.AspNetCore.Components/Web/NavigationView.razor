@{
    var menuCssClass = _state == Enums.NavigationViewState.Closed ? "mq-menu" : "mq-menu open";
}
<div class="mq-nav" @oncontextmenu="(e) => { }" @oncontextmenu:preventDefault="true" @oncontextmenu:stopPropagation="true">
    @if (_displayMode == Enums.NavigationViewDisplayMode.LeftCompact)
    {
    <div class="mq-menu-header">
        <NavigationViewItem OnClick="(e) => Toggle()">
            <Icon>
                <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2,4.5 L14,4.5 M2,7.5 L14,7.5 M2,10.5 L14,10.5" style="stroke: currentColor; stroke-linecap: round;" />
                </svg>
            </Icon>
        </NavigationViewItem>
        <div class="mq-main-header">
            @if (HeaderFrame != null)
                {
            @HeaderFrame.ChildContent
                }
                else if (Header != null)
                {
            @Header
                }
        </div>
    </div>
        <div class="mq-main">
            <CascadingValue TValue="INavigationViewFrame" Value="this" IsFixed="true">
                <div class="mq-main-body" @ref="_frameElement">@Frame</div>
            </CascadingValue>
        </div>
        <div class="@menuCssClass" @ref="_panelElement">
            <CascadingValue TValue="INavigationView" Value="this">
                @if (MenuItems != null)
                {
                    <div class="mq-menu-items">@MenuItems</div>
                }
                @if (FooterItems != null)
                {
                    <div class="mq-menu-footer">@FooterItems</div>
                }
            </CascadingValue>
            @if (IsBackButtonVisible)
            {
                <div class="mq-menu-back">
                    <NavigationViewItem OnClick="async (e) => await BackAsync()" @ref="_backButton" Enabled="false" Tooltip="@BackButtonTitle">
                        <Icon>
                            <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="8" cy="8" r="7.5" style="fill: none; stroke: currentColor;" />
                                <path d="M7.5 5 L4.5 8 L7.5 11 M4.5 8 H12" style="fill: none; stroke: currentColor; stroke-linecap: round; stroke-linejoin: round;" />
                            </svg>
                        </Icon>
                        <Content>@BackButtonTitle</Content>
                    </NavigationViewItem>
                </div>
            }
        </div>
    }
    else if (_displayMode == Enums.NavigationViewDisplayMode.Left)
    {
        <div class="@menuCssClass" @ref="_panelElement">
            <div class="mq-menu-header">
                <NavigationViewItem OnClick="(e) => Toggle()">
                    <Icon>
                        <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                            <path d="M2,4.5 L14,4.5 M2,7.5 L14,7.5 M2,10.5 L14,10.5" style="stroke: currentColor; stroke-linecap: round;" />
                        </svg>
                    </Icon>
                </NavigationViewItem>
            </div>
            <CascadingValue TValue="INavigationView" Value="this">
                @if (MenuItems != null)
                {
                    <div class="mq-menu-items">@MenuItems</div>
                }
                @if (FooterItems != null)
                {
                    <div class="mq-menu-footer">@FooterItems</div>
                }
            </CascadingValue>
            @if (IsBackButtonVisible)
            {
        <div class="mq-menu-back">
            <NavigationViewItem OnClick="async (e) => await BackAsync()" @ref="_backButton" Enabled="false" Tooltip="@BackButtonTitle">
                <Icon>
                    <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="8" cy="8" r="7.5" style="fill: none; stroke: currentColor;" />
                        <path d="M7.5 5 L4.5 8 L7.5 11 M4.5 8 H12" style="fill: none; stroke: currentColor; stroke-linecap: round; stroke-linejoin: round;" />
                    </svg>
                </Icon>
                <Content>@BackButtonTitle</Content>
            </NavigationViewItem>
        </div>
            }
        </div>
        <div class="mq-main">
            @if (HeaderFrame != null)
            {
                <div class="mq-main-header">
                    @HeaderFrame.ChildContent
                </div>
            }
            else if (Header != null)
            {
                <div class="mq-main-header">
                    @Header
                </div>
            }
            <CascadingValue TValue="INavigationViewFrame" Value="this" IsFixed="true">
                <div class="mq-main-body" @ref="_frameElement">@Frame</div>
            </CascadingValue>
        </div>
    }
</div>
