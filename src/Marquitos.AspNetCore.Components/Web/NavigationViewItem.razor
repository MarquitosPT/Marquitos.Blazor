@{
    var disabled = !Enabled;
    var cssButtonClass = Selected ? "mq-btn selected" : "mq-btn";
    var cssButtonContentClass = "mq-btn-content";

    if (MenuItems != null)
    {
        cssButtonClass += " menu";

        switch (_state)
        {
            case Enums.NavigationViewItemState.Openning:
           
                break;

            case Enums.NavigationViewItemState.Open:
                break;

            case Enums.NavigationViewItemState.Closing:
                cssButtonClass += " collapsed";
                break;

            case Enums.NavigationViewItemState.Closed:
                cssButtonClass += " collapsed";
                break;

            default:
                break;
        }
    }
    
}
<button class="@cssButtonClass" title="@Tooltip" @onclick="HandleOnClick" @oncontextmenu="(e) => { }" @oncontextmenu:preventDefault="true" @oncontextmenu:stopPropagation="true" disabled="@disabled">
    @if (Icon != null)
    {
        <div class="mq-btn-icon">@Icon</div>
    }
    else
    {
        <div class="mq-btn-icon">@IconContent</div>
    }
    @if (Content != null)
    {
        <div class="@cssButtonContentClass">@Content</div>
    }
    else if (ChildContent != null)
    {
        <div class="@cssButtonContentClass">@ChildContent</div>
    }
</button>
@if (_state != Enums.NavigationViewItemState.Closed)
{
    @if (MenuItems != null)
    {
        <div class="mq-btn-group" @ref="_panelElement">@MenuItems</div>
    }
}

